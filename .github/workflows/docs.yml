name: Docs

# Controls when the action will run.
on:
  workflow_call:

jobs:
  docs:
    # defining this job separately allows to refer to it later as job.needs dependency
    runs-on: ubuntu-latest
    steps:

      - name: Checking out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # see *py_ver* in ci/update.py
      - name: Setting up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: |
            ci/requirements.txt

      - name: Install required system packages
        shell: sh
        run: |
          PLATFORM="$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')"
          REQFN="ci/requirements_$PLATFORM.txt"
          if [ "$PLATFORM" = "linux" ] && [ -f "$REQFN" ]; then
            sudo apt-get -y install $(sed -e '/^\s*#/d' "$REQFN")
          elif [ "$PLATFORM" = "windows" ] && [ -f "$REQFN" ]; then
            /c/miniconda/condabin/conda.bat install -y $(sed -e '/^\s*#/d' "$REQFN")
          else
            echo "macro sys_install_req(): platform '$PLATFORM' not implemented yet."
          fi

      - name: Install dependencies
        shell: sh
        run: |
          [ -d "/c/miniconda" ] && /c/miniconda/condabin/activate.bat
          python -m pip install --upgrade pip
          python -m pip install --progress-bar=off -r ci/requirements.txt

      - name: Get last and current version
        env:
          PYTHONPATH: ci
        shell: sh
        run: |
          echo "git_ver='$(git describe)'" >> $GITHUB_ENV
          echo "git_ver='$(git describe)'"
          echo "cur_ver='$(semantic-release version --print 2>/dev/null)'" >> $GITHUB_ENV
          echo "cur_ver='$(semantic-release version --print 2>/dev/null)'"
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "git_hash=$(git rev-parse --short HEAD)"

      - name: Set develepment version number
        # modify source files to reflect the current version
        # (relevant for pre-releases indicated by tag only)
        # Does not modify the git history
        if: env.git_ver != env.cur_ver
        env:
          PYTHONPATH: ci
        shell: sh
        # update version for documentation locally only
        run: |
          # update files not covered by semantic-release
          python ci/fixver.py $(semantic-release version --build-metadata $git_hash --no-commit --no-push --print)
          # run semantic-release in source tree only
          semantic-release version --build-metadata $git_hash --no-commit --no-push --skip-build

      - name: Check
        shell: sh
        run: tox -e check -v

      - name: Generate documentation
        shell: sh
        run: tox -e docs -v

      - name: Upload docs for finalization later
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: dist/docs

      # - name: Upload generated documentation
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./dist/docs
